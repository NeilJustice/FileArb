project(libFileArb)
include(${CMAKE_SOURCE_DIR}/CMakeMacros.cmake)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories(${CMAKE_SOURCE_DIR})
include_directories(${ZenUnitAndMetalMockIncludeDirectory})

include_directories("${CMAKE_SOURCE_DIR}/BoostRegex/include")

folder_source_group(Compiler)
folder_source_group(Components)
folder_source_group_subfolder(Components Args)
folder_source_group_subfolder(Components FileArb)
folder_source_group_subfolder(Components Random)
folder_source_group_subfolder(Components SubPrograms)
folder_source_group(Enums)
folder_source_group(StaticUtilities)
folder_source_group_subfolder(UtilityComponents Console)
folder_source_group_subfolder(UtilityComponents Docopt)
folder_source_group_subfolder(UtilityComponents ErrorHandling)
folder_source_group_subfolder(UtilityComponents Exception)
folder_source_group_subfolder(UtilityComponents FileSystem)
folder_source_group_subfolder(UtilityComponents FunctionCallers)
folder_source_group_subsubfolder(UtilityComponents FunctionCallers Member)
folder_source_group_subfolder(UtilityComponents Misc)
folder_source_group_subfolder(UtilityComponents Time)
folder_source_group(ValueTypes)

file(GLOB_RECURSE Sources *.h *.cpp *.ui)
source_group("" FILES ${Sources})

add_library(libFileArb ${Sources})

EnablePrecompiledHeadersIfMSVC()

if(UNIX)
   if(CodeCovMode)
     target_link_libraries(libFileArb CodeCovLibraryInterface)
   endif()
endif()
